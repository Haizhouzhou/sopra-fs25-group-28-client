name: Dockerize

on:
  push:
    branches:
      - main

jobs:
  dockerize:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # auto-generated token
      DOCKER_BUILDKIT: 1

    steps:
      # Checkout repository code
      - uses: actions/checkout@v4

      # Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Docker Hub login using DOCKER_USERNAME and DOCKER_PASSWORD
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push image for amd64 architecture
      - name: Build and push for amd64
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:intel
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:cache
          cache-to: type=inline,mode=max

      # Build and push image for arm64 architecture (e.g., for Apple M-series)
      - name: Build and push for arm64
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:apple
          platforms: linux/arm64/v8
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:cache
          cache-to: type=inline,mode=max
